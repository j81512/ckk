/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-25 00:04:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;
import user.tutor.model.vo.TutorResume;
import board.model.vo.Board;
import board.model.vo.Schedule;
import user.tutor.model.vo.Review;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Map;
import user.member.model.service.UserService;
import user.member.controller.*;
import user.vo.User;

public final class boardView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1598281724000L));
    _jspx_dependants.put("/WEB-INF/views/common/userHeader.jsp", Long.valueOf(1598306330931L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("user.member.controller");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.model.vo.Schedule");
    _jspx_imports_classes.add("user.tutor.model.vo.TutorResume");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("user.vo.User");
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("user.member.model.service.UserService");
    _jspx_imports_classes.add("user.tutor.model.vo.Review");
    _jspx_imports_classes.add("board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

	User memberLoggedIn = (User)session.getAttribute("memberLoggedIn");
    String adminGrade = UserService.USER_ADMIN;

	//쿠키확인 : 요청과 함께 전송된 쿠키확인
	boolean saveId = false;
	String userId = "";
	Cookie[] cookies = request.getCookies();
	if(cookies != null){
		for(Cookie c : cookies){
			String key = c.getName();
			String value = c.getValue();
			if("saveId".equals(key)){
				saveId = true;
				userId = value;
			}
		}
	}	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\" />\r\n");
      out.write(" <style>\r\n");
      out.write("\r\n");
      out.write(" </style>\r\n");
      out.write(" <script src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.5.1.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        $(function(){\r\n");
      out.write("\t$(\"#user-login-form\").submit(function(){\r\n");
      out.write("\t\tvar $userId = $(\"#input-login-id\");\r\n");
      out.write("\t\tvar $password = $(\"#input-login-password\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(/^.{4,}$/.test($userId.val()) == false){\r\n");
      out.write("\t\t\talert(\"유효한 아이디를 입력하세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\tif(/^.{4,}$/.test($password.val()) == false){\r\n");
      out.write("\t\t\talert(\"유효한 패스워드를 입력하세요.\");\t\t\t\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t        });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // 로그인 드롭다운 \r\n");
      out.write("        function mypage(){\r\n");
      out.write("            $(\"#mypage-login\").slideToggle();    \r\n");
      out.write("            $(\"#mypage-loggedIn\").slideToggle();    \r\n");
      out.write("        }\r\n");
      out.write("        // 비밀번호 변경 시 js 효과\r\n");
      out.write("/*         function lostPw(){\r\n");
      out.write("            $(\"#mypage-login\").slideUp();\r\n");
      out.write("            $(\"#mypage-lostpw\").slideDown('300', 'linear');\r\n");
      out.write("        }; */\r\n");
      out.write("        // 비밀번호 변경 시 정보 체크\r\n");
      out.write("        function infoChk(){\r\n");
      out.write("            var INFO = 1;\r\n");
      out.write("            if(INFO = 1){\r\n");
      out.write("                alert(\"비밀번호 변경이 완료되었습니다!\");\r\n");
      out.write("                 $(\"#mypage-lostpw\").slideUp();\r\n");
      out.write("                $(\"#mypage-lostpw\").css(\"display\", \"none.\");\r\n");
      out.write("                $(\"#mypage-login\").slideDown(); \r\n");
      out.write("\r\n");
      out.write("            }else{\r\n");
      out.write("                alert(\"입력하신 정보가 고객님의 회원 정보와 일치하지 않습니다.\\n다시 확인해 주세요.\");\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        $(function(){\r\n");
      out.write("        \t$(\"#logout\").click(function(){\r\n");
      out.write("        \t\t$(\"#mypage-login\").slideToggle();\r\n");
      out.write("        \t\t$(\"#mypage-loggedIn\").slideToggle();\r\n");
      out.write("        \t\tvar result = confirm(\"로그아웃 하시겠습니까?\");\r\n");
      out.write("            \tif(result){\r\n");
      out.write("            \t\tlocation.href = \"");
      out.print( request.getContextPath() );
      out.write("/user/logout\";\r\n");
      out.write("            \t\talert(\"성공적으로 로그아웃 되었습니다!\");\r\n");
      out.write("            \t}\r\n");
      out.write("        \t});\r\n");
      out.write("        });\r\n");
      out.write("        function adminLogout(){\r\n");
      out.write("        \tvar result = confirm(\"로그아웃 하시겠습니까?\");\r\n");
      out.write("        \tif(result){\r\n");
      out.write("        \t\tlocation.href = \"");
      out.print( request.getContextPath() );
      out.write("/user/logout\";\r\n");
      out.write("        \t\talert(\"성공적으로 로그아웃 되었습니다!\");\r\n");
      out.write("        \t}\r\n");
      out.write("        };\r\n");
      out.write("        //비밀번호 재설정\r\n");
      out.write("        function lostPw(){\r\n");
      out.write("        \tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/user/checkInfo\";\r\n");
      out.write("        \t\r\n");
      out.write("        };\r\n");
      out.write("        \r\n");
      out.write("        //리뷰팝업\r\n");
      out.write("\t        function writeReview(){\r\n");
      out.write("        \tvar url = \"");
      out.print(request.getContextPath());
      out.write("/user/writeReview\";\r\n");
      out.write("        \tvar title = \"WriteReviewPopup\";\r\n");
      out.write("        \tvar status = \"left=366px, top=100px, width=700px, height=450px\";\r\n");
      out.write("        \t\r\n");
      out.write("        \topen(url, title, status);\r\n");
      out.write("        }; \r\n");
      out.write("        \r\n");
      out.write("        function msg(){\r\n");
      out.write("        \tvar url = \"");
      out.print( request.getContextPath() );
      out.write("/user/message?userId=");
      out.print( memberLoggedIn != null ? memberLoggedIn.getUserId() : "" );
      out.write("\";\r\n");
      out.write("        \tvar title = \"My Message\";\r\n");
      out.write("        \tvar status = \"left= 300px, top=50px, width=1000px, height=700;\";\r\n");
      out.write("        \topen(url, title, status);\r\n");
      out.write("        };\r\n");
      out.write("    </script>\r\n");
      out.write("    <style>\r\n");
      out.write("\t  @font-face {\r\n");
      out.write("        font-family: 'IBMPlexSansKR-Regular';\r\n");
      out.write("        src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-07@1.0/IBMPlexSansKR-Regular.woff') format('woff');\r\n");
      out.write("        font-weight: normal;\r\n");
      out.write("        font-style: normal;\r\n");
      out.write("        }  \r\n");
      out.write("        html, body{\r\n");
      out.write("        font-family: 'IBMPlexSansKR-Regular';\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 회원이 현재 로그인하지 않은 경우, 즉 비회원인 경우 -->\r\n");
 if (memberLoggedIn == null){ 
      out.write("\t\r\n");
      out.write("    <div class=\"wrapper-user-header\">\r\n");
      out.write("        <div class=\"user-header\">\r\n");
      out.write("            <div class=\"user-navbar\">\r\n");
      out.write("                    <div class=\"navbar-user-menu\">\r\n");
      out.write("                <a href=\"");
      out.print( request.getContextPath());
      out.write("\"><button id=\"logo-btn\" class=\"logo-btn\">cooking-king</button></a>\r\n");
      out.write("            <button class=\"user-navbar1\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board/list'\">클래스</button>\r\n");
      out.write("            <button class=\"user-navbar2\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/schedule'\">내 스케줄</button>\r\n");
      out.write("            <button class=\"user-navbar4\" id=\"mypage-btn\" onclick=\"mypage();\">로그인</button>\r\n");
      out.write("            <button class=\"user-navbar5\" onclick=\"location.href='");
      out.print( request.getContextPath());
      out.write("/center/list'\">고객센터</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("            </div>\r\n");
      out.write("       <div class=\"login-wrapper\">\r\n");
      out.write("            <div class=\"mypage-login\" id=\"mypage-login\">\r\n");
      out.write("                <p id=\"welcome-back\" class=\"welcome-back\">WELCOME!</p>\r\n");
      out.write("                <form class=\"user-login-form\" id=\"user-login-form\"\r\n");
      out.write("                action=\"");
      out.print( request.getContextPath() );
      out.write("/user/login\"\r\n");
      out.write("\t\t\t\t\t  method=\"POST\">\r\n");
      out.write("                    <input type=\"text\" class=\"input-login-id\" id=\"input-login-id\" name=\"userId\"\r\n");
      out.write("                        placeholder=\"아이디를 입력하세요.\" value=\"");
      out.print( saveId ? userId : "");
      out.write("\" required><br>\r\n");
      out.write("                    <input type=\"password\" class=\"input-login-password\" id=\"input-login-password\" name=\"password\"\r\n");
      out.write("                        placeholder=\"비밀번호를 입력하세요.\" required><br>\r\n");
      out.write("                        <a href=\"#\" id=\"lost-pw\" class=\"lost-pw-question\" onclick=\"lostPw();\">비밀번호를 잊으셨나요?</a>\r\n");
      out.write("                        <br />\r\n");
      out.write("                        <a href=\"");
      out.print( request.getContextPath());
      out.write("/user/enroll\" \r\n");
      out.write("                        id=\"register-q\" class=\"register-question\">또는 회원가입을 원하시나요?</a>\r\n");
      out.write("                        <br />\r\n");
      out.write("                    <input type=\"submit\" value=\"로그인\" id=\"login-btn\" class=\"login-btn\" onclick=\"login();\" required><br>\r\n");
      out.write("                </form>\r\n");
      out.write("           </div>\r\n");
      out.write("     </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 여기까지 확인 완료 -->\r\n");
      out.write("  ");
 } else if (memberLoggedIn != null && !memberLoggedIn.getCommGrade().equals(adminGrade)){ 
      out.write("\r\n");
      out.write("      <div class=\"wrapper-user-header\">\r\n");
      out.write("        <div class=\"user-header\">\r\n");
      out.write("            <div class=\"user-navbar\">\r\n");
      out.write("                    <div class=\"navbar-user-menu\">\r\n");
      out.write("                <a href=\"");
      out.print( request.getContextPath());
      out.write("\"><button id=\"logo-btn\" class=\"logo-btn\">cooking-king</button></a>\r\n");
      out.write("            <button class=\"user-navbar1\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board/list'\">클래스</button>\r\n");
      out.write("            <button class=\"user-navbar2\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/schedule?userId=");
      out.print(memberLoggedIn.getUserId());
      out.write("'\">내 스케줄</button>\r\n");
      out.write("            <button class=\"user-navbar4\" id=\"mypage-btn\" onclick=\"mypage();\">마이페이지</button>\r\n");
      out.write("            <button class=\"user-navbar5\" onclick=\"location.href='");
      out.print( request.getContextPath());
      out.write("/center/list'\">고객센터</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("            </div>\r\n");
      out.write("      <div class=\"mypage-loggedIn\" id=\"mypage-loggedIn\">\r\n");
      out.write("   \t\t<div class=\"hello\" id=\"hello\">\r\n");
      out.write("   \t\t\t<p class=\"hello-p\">");
      out.print( memberLoggedIn.getUserName() );
      out.write("님, 안녕하세요.</p>\r\n");
      out.write("   \t\t</div>\r\n");
      out.write("        <div class=\"mypage\" id=\"mypage\">\r\n");
      out.write("            <button class=\"mypages\" id=\"myinfo\" onclick=\"location.href='");
      out.print( request.getContextPath());
      out.write("/user/view?userId=");
      out.print(memberLoggedIn.getUserId());
      out.write("'\">내 정보 수정</button><br />\r\n");
      out.write("            <button class=\"mypages\" id=\"point-charge\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/point/pointManagement'\">포인트 관리</button><br />\r\n");
      out.write("            <button class=\"mypages\" id=\"write-resume\" onclick=\"");
      out.print("P".equals(memberLoggedIn.getResumeYNP()) ? "alert('이력서심사가 진행중입니다.')" : "location.href='" +request.getContextPath()+ "/tutor/writerResume?userId=" +memberLoggedIn.getUserId()+"'" );
      out.write("\">이력서 관리</button><br />\r\n");
      out.write("            <button class=\"mypages\" id=\"write-review\" onclick=\"writeReview();\">리뷰 작성</button><br />\r\n");
      out.write("            <button class=\"mypages\" id=\"get-msg\" onclick=\"msg();\">메세지</button><br />\r\n");
      out.write("            <button class=\"mypages\" id=\"logout\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/logout'\">로그아웃</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>    \r\n");
      out.write("        ");
 } else if (memberLoggedIn != null && memberLoggedIn.getCommGrade().equals(adminGrade)){ 
      out.write("\r\n");
      out.write("    \t    <div class=\"wrapper-admin-header\">\r\n");
      out.write("       \t\t\t <div class=\"admin-header\">\r\n");
      out.write("          \t\t\t  <div class=\"admin-navbar\">\r\n");
      out.write("                    <div class=\"navbar-admin-menu\">\r\n");
      out.write("                <a href=\"");
      out.print( request.getContextPath());
      out.write("\"><button id=\"logo-btn-a\">cooking-king</button></a>\r\n");
      out.write("            <button class=\"admin-navbar0\" id=\"admin-logout\" onclick=\"adminLogout();\">로그아웃</button>\r\n");
      out.write("            <button class=\"admin-navbar1\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board/list'\">클래스 관리</button>\r\n");
      out.write("            <button class=\"admin-navbar2\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/admin/page'\">회원 관리</button>\r\n");
      out.write("            <button class=\"admin-navbar4\" onclick=\"location.href='");
      out.print( request.getContextPath());
      out.write("/admin/analysis'\">현황 조회</button>\r\n");
      out.write("            <button class=\"admin-navbar5\" onclick=\"location.href='");
      out.print( request.getContextPath());
      out.write("/center/list'\">고객센터</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("            </div>\r\n");
      out.write("       \t\t\t <div class=\"helloAdmin\" id=\"helloAdmin\">\r\n");
      out.write("   \t\t\t\t\t<p class=\"helloAdmin-p\" onclick=\"adminLogout();\">\r\n");
      out.write("   \t\t\t\t\t");
      out.print( memberLoggedIn.getUserName() );
      out.write("님, 안녕하세요. </p>\r\n");
      out.write("   \t\t\t\t </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \t");
 } 
      out.write("\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("  \r\n");
      out.write("<style>\r\n");
      out.write(" \t   .public-footer{\r\n");
      out.write("        top: 58em;\r\n");
      out.write("        }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");

	Map<String, Object> map = (Map<String, Object>)request.getAttribute("map");
	List<Review> reviewList = (List<Review>)map.get("reviewList");
	List<Schedule> scheduleList = (List<Schedule>)map.get("scheduleList");
	Board board = (Board)map.get("board");
	TutorResume tr = (TutorResume)map.get("tutorResume");
	User user = (User)map.get("user");
	int cntApplied = 0;
	List<String> userApplied = new ArrayList<>();
	if(scheduleList != null){
		cntApplied = scheduleList.size();
		for(Schedule s : scheduleList){
			userApplied.add(s.getUserId());
		}
	}
	
	Calendar cal = Calendar.getInstance();
	int now = cal.get(Calendar.YEAR);
	cal.setTime(user.getBirthday());
	int age = now - cal.get(Calendar.YEAR);
	
	int sum = 0;
	for(Review review : reviewList){
		sum += review.getReviewScore();
	}
	double grade = (double)sum/reviewList.size();
	
	/* 예빈: 클래스 리스트 - 포인트 액수에 DecimalFormat 대입 */
	DecimalFormat pointF = new DecimalFormat("###,###,### 포인트");

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#enrolment-btn\").click(function(){\r\n");
      out.write("\t\tif(");
      out.print( memberLoggedIn == null );
      out.write("){\r\n");
      out.write("\t\t\talert(\"로그인 후 이용해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");

	if(memberLoggedIn != null){

      out.write("\r\n");
      out.write("\t\tif(confirm('수강신청 하시겠습니까?') == false) return;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(");
      out.print( memberLoggedIn.getPointSum() < board.getPrice() );
      out.write("){\r\n");
      out.write("\t\t\talert(\"포인트가 부족합니다. 충전 후 이용해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlocation.href = '");
      out.print( request.getContextPath() );
      out.write("/board/enrolment?classNo=");
      out.print( board.getClassNo() );
      out.write("&userId=");
      out.print( memberLoggedIn.getUserId() );
      out.write("';\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#cancel-btn\").click(function(){\r\n");
      out.write("\t\tif(confirm('수강신청을 취소하시겠습니까?') == false) return;\r\n");
      out.write("\t\tlocation.href = '");
      out.print( request.getContextPath() );
      out.write("/board/cancel?classNo=");
      out.print( board.getClassNo() );
      out.write("&userId=");
      out.print( memberLoggedIn.getUserId() );
      out.write("';\r\n");
 } 
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/board-view.css\" />\r\n");
      out.write("\t<div class=\"view-div\">\r\n");
      out.write("\t\t<section id=\"board-sec\">\r\n");
      out.write("\t\t\t<div id=\"board-title\">\r\n");
      out.write("\t\t\t\t<p class=\"class-list-title\">");
      out.print( board.getTitle() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t<p class=\"class-list-tutor-name\">");
      out.print( user.getUserName() );
      out.write(" 튜터</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t<!-- (예빈) 2번째, 3번째 이미지가 존재하지 않는다고 하더라도 해당 섹션의 wrapper-div는 남겨두고, 값이 존재하는 경우 정보를 삽입하는 것으로 변경한다. \r\n");
      out.write("\t\t\t       단, 해당 섹션에 대입될 이미지가 존재하지 않는 경우 background-color : 기본 컬러에서 명도가 다소 낮은 컬러로 변경하도록 분기처리 할 것. \r\n");
      out.write("\t\t\t       이는 컬러 리팩토링 이후에 변경 사항을 반영할 예정. -->\r\n");
      out.write("\t<div id=\"img-class-wrapps\">\r\n");
      out.write("\t\t<div class=\"img-class-wrapper\">\r\n");
      out.write("\t\t\t<div id=\"cla-li-pics\">\r\n");
      out.write("\t\t\t\t<img src=\"");
      out.print( request.getContextPath() );
      out.write("/upload/food/");
      out.print( board.getClassPic1Ren() );
      out.write("\" alt=\"\" class=\"cla-li-sec\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"img-class-wrapper2\">\r\n");
 	if(board.getClassPic2Ren() != null && !"".equals(board.getClassPic2Ren())){ 
      out.write("\r\n");
      out.write("\t\t<img src=\"");
      out.print( request.getContextPath() );
      out.write("/upload/food/");
      out.print( board.getClassPic2Ren() );
      out.write("\" alt=\"\" class=\"cla-li-sec\"/>\r\n");
 } 
      out.write(" \r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"img-class-wrapper3\">\r\n");
 if(board.getClassPic3Ren() != null && !"".equals(board.getClassPic3Ren())){ 
      out.write("\r\n");
      out.write("\t\t<img src=\"");
      out.print( request.getContextPath() );
      out.write("/upload/food/");
      out.print( board.getClassPic3Ren() );
      out.write("\" alt=\"\" class=\"cla-li-sec\" />\r\n");
 	} 
      out.write("\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t</div>\r\n");
      out.write("<!-- \t\t\t<p class=\"bv-t-info-title\">수업 정보</p> -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t<!-- (예빈) css 편의상 이 부분은 테이블 아닌 별도의 div로 변경하여 처리한다. -->\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- (예빈) pre 태그를 사용할 것을 감안하고 게시글을 작성한 후  배치해야 옳을 것이나,\r\n");
      out.write("\t\t\t\t\t\t샘플 데이터의 현재 상황상 사용하지 않는 것이 낫다고 판단되어 우선 주석 처리하고 그에 맞게 배치 함.\r\n");
      out.write("\t\t\t\t\t\t상황 봐서 pre 태그 추가하여 배치하는 방법도 고려해 볼 것. 2020.08.20. -->\r\n");
      out.write("\t\t\t\t<div class=\"bv-context\">\r\n");
      out.write("\t\t\t\t\t<div class=\"bv-context-inner\">\r\n");
      out.write("\t\t\t\t\t\t<p id=\"bv-context-p\">\r\n");
      out.write("\t\t\t<!-- \t\t\t<pre> -->\r\n");
      out.write("\t\t\t\t\t\t");
      out.print( board.getClassContent() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t<!-- \t\t\t</pre> -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\t<div id=\"bv-resume-wrapper\">\t\r\n");
      out.write("\t\t<section id=\"resume-sec\">\r\n");
      out.write("\t\t\t\t\t<table id=\"board-table\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=4 class=\"all-table-title\" id=\"class-tbl-th\">수강 정보</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>지원 마감일</th>\r\n");
      out.write("\t\t\t\t\t<td class=\"bv-t-apply\">");
      out.print( board.getLastApplyDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th>인원</th>\r\n");
      out.write("\t\t\t\t\t<td class=\"bv-t-capacity\">현재 ");
      out.print( cntApplied );
      out.write("명 / 최대 ");
      out.print( board.getCapacity() );
      out.write("명</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>수업 날짜</th>\r\n");
      out.write("\t\t\t\t\t<td class=\"bv-t-date\">");
      out.print( board.getClassDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th>위치</th>\r\n");
      out.write("\t\t\t\t\t<td class=\"bv-t-address\">");
      out.print( board.getClassAddress() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>시작 시간</th>\r\n");
      out.write("\t\t\t\t\t<td class=\"bv-t-start\">");
      out.print( board.getStartTime() );
      out.write("시</td>\r\n");
      out.write("\t\t\t\t\t<th>종료 시간</th>\r\n");
      out.write("\t\t\t\t\t<td class=\"bv-t-end\">");
      out.print( board.getEndTime() );
      out.write("시</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\t\r\n");
      out.write("\t\t\t<img src=\"");
      out.print( request.getContextPath() );
      out.write("/upload/tutor/");
      out.print( tr.getProfileRen() );
      out.write("\" alt=\"\" style=\"width: 550px; height: 550px;\"/>\t\t\t\r\n");
      out.write("\t\t\t<table id=\"bv-resume-table\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=5 class=\"all-table-title\">");
      out.print( user.getUserName() );
      out.write(" 튜터 정보</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>등급</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( user.getCommGrade() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th>평점</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( String.format("%.1f", grade) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( user.getUserName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( user.getUserId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( user.getPhone() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<th>이메일</th>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( user.getEmail() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
 	if(tr.getAwardRecord() != null && !"".equals(tr.getAwardRecord())){ 
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>수상내역</th>\r\n");
      out.write("\t\t\t\t\t<td colspan=3>");
      out.print( tr.getAwardRecord() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
 
	} 
	if(tr.getCareer() != null && !"".equals(tr.getCareer())){

      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>경력</th>\r\n");
      out.write("\t\t\t\t\t<td colspan=3>");
      out.print( tr.getCareer() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");

	}
	if(tr.getCertN1() != null && !"".equals(tr.getCertN1())
	&& tr.getCertC1() != null && !"".equals(tr.getCertC1())){ 

      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=2>자격증 명</th>\r\n");
      out.write("\t\t\t\t\t<th colspan=2>자격증 코드</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>");
      out.print( tr.getCertN1() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>");
      out.print( tr.getCertC1() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");

	} 

	if(tr.getCertN2() != null && !"".equals(tr.getCertN2())
	&& tr.getCertC2() != null && !"".equals(tr.getCertC2())){ 

      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>");
      out.print( tr.getCertN2() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>");
      out.print( tr.getCertC2() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");

	}

	if(tr.getCertN3() != null && !"".equals(tr.getCertN3())
	&& tr.getCertC3() != null && !"".equals(tr.getCertC3())){ 

      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>");
      out.print( tr.getCertN3() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>");
      out.print( tr.getCertC3() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
 } 
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<section id=\"review-sec\">\r\n");

	if(reviewList != null && !reviewList.isEmpty()){ 

      out.write("\r\n");
      out.write("\t\t\t<table id=\"review-tbl\">\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=5 class=\"all-table-title\">리뷰</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr class=\"sticky-review-hd\">\r\n");
      out.write("\t\t\t\t\t\t<th class=\"review-th-no\">클래스 번호</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"review-th-id\">학생 아이디</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"review-th-cont\">후기</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"review-th-score\">평점</th>\r\n");
      out.write("\t\t\t\t\t\t<th class=\"review-th-date\">작성일</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");

		for(Review r : reviewList){

      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( r.getClassNo() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( r.getUserId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( r.getReviewContent() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( r.getReviewScore() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( r.getReviewDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\t\t\r\n");
		} 
      out.write("\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
	} else { 
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"noReview\">아직 등록된 후기가 없습니다.</div>\r\n");
 	} 
      out.write("\r\n");
      out.write("\t\t</section>\r\n");
 if(memberLoggedIn != null) {
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"bv-what-is-this\">\r\n");
      out.write("\t\t\t\t\t");
      out.print( board.getApplyExpireYn().equals("Y") ? "<span>신청이 마감되었습니다!</span>" : userApplied.contains(memberLoggedIn.getUserId()) ? 
							"<input type='button' id='cancel-btn' value='신청취소' />" : "<input type='button' id='enrolment-btn' value='신청하기' /> " );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"bv-apply-btn\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"bv-price\">");
      out.print( pointF.format(board.getPrice()) );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"bv-apply-btn\">\r\n");
      out.write("\t\t\t\t\t\t<p class=\"bv-price\">");
      out.print( pointF.format(board.getPrice()) );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t<input type='button' id='enrolment-btn' value='신청하기' />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
 } 
      out.write("\r\n");
      out.write("\t</div>\r\n");
 
	if(memberLoggedIn != null && !"".equals(memberLoggedIn.getUserId())
	&& (memberLoggedIn.getUserId().equals(user.getUserId()) 
   	|| "AD".equals(memberLoggedIn.getCommGrade()))) { 
		if(cntApplied == 0){

      out.write("\r\n");
      out.write("   \t<input class=\"board-btn\" id=\"update\" type=\"button\" value=\"게시글 수정\" />\r\n");
 
		}

      out.write("\r\n");
      out.write("   \t<input class=\"board-btn\" id=\"delete-admin-btn\" type=\"button\" value=\"게시글 삭제\" />\r\n");
      out.write("\r\n");
      out.write("  </div> \t\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$(\".board-btn\").click(function(){\r\n");
      out.write("\r\n");
      out.write("\t\tif(");
      out.print( memberLoggedIn.getUserId().equals(user.getUserId()) );
      out.write("\r\n");
      out.write("\t\t&& (");
      out.print( cntApplied );
      out.write(" > 0)){\r\n");
      out.write("\t\t\tif(confirm(\"수강신청한 인원이 있습니다.\\n수수료 \" + \"");
      out.print( board.getPrice()*0.05 );
      out.write("\" + \"포인트의 수수료가 부가됩니다.\") == false) return;\r\n");
      out.write("\t\t\tvar comm = ");
      out.print( board.getPrice()*0.05 );
      out.write(";\r\n");
      out.write("\t\t\tif(comm > ");
      out.print( user.getPointSum() );
      out.write("){\r\n");
      out.write("\t\t\t\talert(\"포인트가 부족합니다. 충전 후 진행해주세요.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif(confirm(\"정말 \"+ $(this).val() + \" 하시겠습니까?\") == false) return;\r\n");
      out.write("\t\tlocation.href = \"");
      out.print( request.getContextPath() );
      out.write("/board/\" + ($(this).val() == \"게시글 수정\" ? \"update?classNo=\" : \"delete?classNo=\") + \"");
      out.print( board.getClassNo() );
      out.write("\";\r\n");
      out.write("\t});\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
 } 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        @font-face {\r\n");
      out.write("            font-family: 'IBMPlexSansKR-Text';\r\n");
      out.write("            src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-07@1.0/IBMPlexSansKR-Text.woff') format('woff');\r\n");
      out.write("            font-weight: normal;\r\n");
      out.write("            font-style: normal;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /* (예빈)고정 높이 footer: 각 페이지마다 그 높이가 다르므로 top 설정 style은 각 페이지에서 직접 제어하는 것으로 한다. */\r\n");
      out.write("        .public-footer{\r\n");
      out.write("        \tposition: absolute;\r\n");
      out.write("            padding-top: 1.6em;\r\n");
      out.write("            padding-bottom: 1.6em;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            vertical-align: center;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            letter-spacing: 1px;\r\n");
      out.write("            font-size: .86em;\r\n");
      out.write("            color: rgba(0, 0, 0, 0.7);\r\n");
      out.write("            box-shadow: 0.5rem 0.5rem 0.5rem #BCC6D2, \r\n");
      out.write("            -0.5rem -0.5rem 0.5rem rgba(244, 249, 255, 0.726);\r\n");
      out.write("        \tborder-radius: 3rem;\r\n");
      out.write("            background-color: rgb(204, 219, 238);\r\n");
      out.write("        }\r\n");
      out.write("        .footer-inner{\r\n");
      out.write("            width: 114em;\r\n");
      out.write("            height: 10em;\r\n");
      out.write("        }\r\n");
      out.write("        .logo-title{\r\n");
      out.write("            text-transform: uppercase;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"public-footer\">\r\n");
      out.write("        <p class=logo-title>Cookingking </p>\r\n");
      out.write("            <div class=\"footer-inner\">\r\n");
      out.write("            <p class=\"first-line\">\r\n");
      out.write("                <strong>상호명</strong> \r\n");
      out.write("                    주식회사 Cookingking\r\n");
      out.write("                <strong>개인정보책임자</strong> \r\n");
      out.write("                    김동현\r\n");
      out.write("                <strong>사업자등록번호</strong> \r\n");
      out.write("                    111-11-11111\r\n");
      out.write("                <strong>통신판매신고번호</strong> \r\n");
      out.write("                    2020-서울강남-0825\r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"second-line\">\r\n");
      out.write("                <strong>주소</strong> \r\n");
      out.write("                    서울특별시 강남구 테헤란로 10길 9 그랑프리빌딩 5F\r\n");
      out.write("                <strong>대표번호</strong> \r\n");
      out.write("                    0000-0000\r\n");
      out.write("                <strong>이메일</strong>\r\n");
      out.write("                    we_love_cookingking@ckk.com \r\n");
      out.write("            </p>\r\n");
      out.write("            <p class=\"third-line\">\r\n");
      out.write("                <strong>(주)Cookingking</strong>\r\n");
      out.write("                    은 통신판매중개자이며 통신판매 당사자가 아닙니다. \r\n");
      out.write("                    따라서 클래스/개인간 거래 및 판매에 대하여 책임을 지지 않습니다.\r\n");
      out.write("            </p>        \r\n");
      out.write("            <p class=\"last-line\">\r\n");
      out.write("            <strong>Copyright © Cookingking. All Rights Reserved.</strong>\r\n");
      out.write("            </p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
